minecraft {
  refmapName = "${project.group}.${project.archivesBaseName}"
}

// Contains curse token, maven user and password.
if (rootProject.file('private.gradle').exists()) {
	apply from: 'private.gradle'
}

processResources {
	inputs.property 'version', project.version
  from(sourceSets.main.resources.srcDirs) {
      include 'fabric.mod.json'
      expand 'version': project.version
  }
  from(sourceSets.main.resources.srcDirs) {
      exclude 'fabric.mod.json'
  }
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = "javadoc"
	from javadoc.destinationDir
}

artifacts {
  archives(jar.archivePath) {
    builtBy remapJar
  }
  archives(sourcesJar.archivePath) {
    builtBy remapSourcesJar
  }
  archives(javadocJar.archivePath) {
    builtBy javadocJar
  }
}